(define (problem taxi-5)
	(:domain taxi)
	(:objects 
		player0 player1 - player
		car0 car1 car2 car3 - unit
		person0 person1 person2 person3 person4 - person
		n0 n1 n2 n3 n4 n5 n6 n7 n8 n9 n10 n11 n12 n13 n14 - location
		)
	(:init 
		(is-enemy player0 player1)
		(has-unit player0 car0)
		(has-unit player0 car1)
		(is-enemy player1 player0)
		(has-unit player1 car2)
		(has-unit player1 car3)
		
		(at-unit car0 n0)
		(empty car0)
		(at-unit car1 n4)
		(empty car1)
		(at-unit car2 n5)
		(empty car2)
		(at-unit car3 n8)
		(empty car3)
		
		(at-person person0 n1)
		(destination person0 n12)
		(= (payment person0) 100)
		(at-person person1 n0)
		(destination person1 n11)
		(= (payment person1) 100)
		(at-person person2 n3)
		(destination person2 n8)
		(= (payment person2) 100)
		(at-person person3 n13)
		(destination person3 n5)
		(= (payment person3) 100)
		(at-person person4 n4)
		(destination person4 n0)
		(= (payment person4) 100)
		
		(connected n2 n4)
		(connected n4 n2)
		(= (distance n2 n4) 2)
		(= (distance n4 n2) 2)
		(connected n4 n9)
		(connected n9 n4)
		(= (distance n4 n9) 3)
		(= (distance n9 n4) 3)
		(connected n4 n5)
		(connected n5 n4)
		(= (distance n4 n5) 4)
		(= (distance n5 n4) 4)
		(connected n9 n5)
		(connected n5 n9)
		(= (distance n9 n5) 1)
		(= (distance n5 n9) 1)
		(connected n9 n12)
		(connected n12 n9)
		(= (distance n9 n12) 8)
		(= (distance n12 n9) 8)
		(connected n5 n12)
		(connected n12 n5)
		(= (distance n5 n12) 9)
		(= (distance n12 n5) 9)
		(connected n12 n7)
		(connected n7 n12)
		(= (distance n12 n7) 7)
		(= (distance n7 n12) 7)
		(connected n12 n14)
		(connected n14 n12)
		(= (distance n12 n14) 11)
		(= (distance n14 n12) 11)
		(connected n7 n14)
		(connected n14 n7)
		(= (distance n7 n14) 5)
		(= (distance n14 n7) 5)
		(connected n14 n11)
		(connected n11 n14)
		(= (distance n14 n11) 7)
		(= (distance n11 n14) 7)
		(connected n11 n10)
		(connected n10 n11)
		(= (distance n11 n10) 3)
		(= (distance n10 n11) 3)
		(connected n10 n0)
		(connected n0 n10)
		(= (distance n10 n0) 5)
		(= (distance n0 n10) 5)
		(connected n10 n13)
		(connected n13 n10)
		(= (distance n10 n13) 25)
		(= (distance n13 n10) 25)
		(connected n0 n13)
		(connected n13 n0)
		(= (distance n0 n13) 30)
		(= (distance n13 n0) 30)
		(connected n0 n8)
		(connected n8 n0)
		(= (distance n0 n8) 21)
		(= (distance n8 n0) 21)
		(connected n13 n8)
		(connected n8 n13)
		(= (distance n13 n8) 10)
		(= (distance n8 n13) 10)
		(connected n8 n3)
		(connected n3 n8)
		(= (distance n8 n3) 9)
		(= (distance n3 n8) 9)
		(connected n3 n6)
		(connected n6 n3)
		(= (distance n3 n6) 17)
		(= (distance n6 n3) 17)
		(connected n6 n1)
		(connected n1 n6)
		(= (distance n6 n1) 8)
		(= (distance n1 n6) 8)
		(connected n6 n2)
		(connected n2 n6)
		(= (distance n6 n2) 28)
		(= (distance n2 n6) 28)
		(connected n1 n2)
		(connected n2 n1)
		(= (distance n1 n2) 30)
		(= (distance n2 n1) 30)
		(connected n1 n4)
		(connected n4 n1)
		(= (distance n1 n4) 27)
		(= (distance n4 n1) 27)
		
		)
	(:goal (and 
		(preference delivered-player0-person0 (is-delivered person0 player0))
		(preference delivered-player0-person1 (is-delivered person1 player0))
		(preference delivered-player0-person2 (is-delivered person2 player0))
		(preference delivered-player0-person3 (is-delivered person3 player0))
		(preference delivered-player0-person4 (is-delivered person4 player0))))

	(:metric minimize (+ 
		(* 100 (is-violated delivered-player0-person0))
		(* 100 (is-violated delivered-player0-person1))
		(* 100 (is-violated delivered-player0-person2))
		(* 100 (is-violated delivered-player0-person3))
		(* 100 (is-violated delivered-player0-person4))))

	)

	